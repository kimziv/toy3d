#summary Reference resouce such as doc, codes, links.

= OGRE =

==OGREs设计思路==

camera, light 从 SceneManager 创建

scene node 与 mesh 分离，mesh attach 到 scene node里

Material: 在ogre里面Material的含义不再只是包含光照信息的那个Material的含义了。ogre把texture也加入到了Material里面(还有其他的很多的信息)，这样对于同一种Material最多只用调用一次setmaterial和,,settexture,,1

Mesh: ogre的mesh由一个或者多个submesh构成，每个submesh就对应一个Material，绘制的时候submesh是一个基本的单元。[1]

ogre使用了多流的技术，把vertex的positon，normal，texcord这些数据分开，放到多个流里面进行渲染，这方面的技术可以参考[http://dev.gameres.com/Program/Visual/3D/multistream.htm D3D中多流的用法]。[1]

OGRE 渲染过程[1]： 

在ogre里面，场景组织成一棵树形结构，而每一个可以画到屏幕上的物体都是一个renderable，在渲染的时候，ogre遍历场景树，利用剪裁算法（最基本的就是基于视锥的剪裁算法）剔出完全不可见的renderable，把可见的renderable放如到渲染队列里面，最后把渲染队列里面的renderable按照需要进行渲染。



==最简单的 OGRE 程序==

使用 ManualObject，加载纹理，显示cube，最简单的调用方式：

[http://hsw625728.blog.163.com/blog/static/39570728200910823457100/ 学习OGRE： 绘制一个立方体ManualObject]

[http://hsw625728.blog.163.com/blog/static/3957072820091084913370/ 学习OGRE：加上纹理] 

==Pro OGRE Programming 笔记==

[http://kun-111.blog.163.com/blog/static/40314793200781154032626/ Pro OGRE Programming笔记系列]

= 参考 =

  # [http://gpgame.net/docs/program/ogre.htm ogre的图形渲染方式] 
 